--- a/assets/game/shaders/godrays.vsh
+++ b/assets/game/shaders/godrays.vsh
@@ -1,4 +1,4 @@
-#version 330 core
+ï»¿#version 330 core
 
 uniform vec2 invFrameSizeIn;
 uniform vec3 sunPosScreenIn;
@@ -7,13 +7,44 @@
 uniform float iGlobalTimeIn;
 uniform float directionIn;
 uniform int dusk;
+uniform float moonLightStrength;
+uniform float sunLightStrength;
+uniform float dayLightStrength;
+uniform float shadowIntensity;
+uniform float flatFogDensity;
+uniform float temperature;
 
 out vec2 texCoord;
 out vec3 sunPosScreen;
-//out vec3 sunPos3d;
 out float iGlobalTime;
-out float intensity;
 out float direction;
+out vec3 color;
+
+const float NumDayColors = 5.0;
+const vec3 DayColors[5] = vec3[5](
+	vec3(1.0f, 0.2f, 0.0f),
+	vec3(1.0f, 0.6f, 0.2f),
+	vec3(0.8f, 0.75f, 0.7f),
+	vec3(0.6f, 0.8f, 1.0f),
+	vec3(0.4f, 0.6f, 1.0f)
+);
+
+const vec3 HotDayColors[5] = vec3[5](
+	vec3(1.0f, 0.2f, 0.0f),
+	vec3(1.0f, 0.6f, 0.2f),
+	vec3(1.0f, 0.65f, 0.5f),
+	vec3(1.0f, 0.75f, 0.6f) * 0.9,
+	vec3(1.0f, 0.9f, 0.7f) * 0.75
+);
+
+/*const float NumDayColors = 5.0;
+const vec3 DayColors[5] = vec3[5](
+	vec3(1.0f, 0.0f, -0.2f),
+	vec3(1.0f, 0.3f, 0.0f),
+	vec3(1.0f, 0.5f, 0.1f),
+	vec3(1.0f, 0.8f, 0.4f),
+	vec3(1.0f, 0.5f, 0.0f)
+);*/
 
 void main(void)
 {
@@ -26,14 +57,47 @@
 	sunPosScreen = sunPosScreenIn;
 	iGlobalTime = iGlobalTimeIn;
 	
-	float sunPlrAngle = (dot(sunPos3dIn, playerViewVector) + 1) / 3;
+	//float sunPlrAngle = getScattering(dot(sunPos3dIn, playerViewVector));
 	
 	direction = dot(sunPos3dIn, playerViewVector) >= 0 ? 1 : -1;
+
+	vec3 moonColor = vec3(0.2, 0.4, 0.7) * moonLightStrength;
+
+	float height = pow(min(max(sunPos3dIn.y*1.5f, 0.0f), 1f), 2.5f);
+	float actualScale = height * NumDayColors;
+	float cmpH = min(floor(actualScale), NumDayColors-1.0f);
+	float cmpH1 = min(floor(actualScale)+1.0f, NumDayColors-1.0f);
+
+	vec3 coldTemp1 = DayColors[int(cmpH)];
+	vec3 coldTemp2 = DayColors[int(cmpH1)];
+	vec3 hotTemp1 = HotDayColors[int(cmpH)];
+	vec3 hotTemp2 = HotDayColors[int(cmpH1)];
+	
+	float hotness = clamp((temperature - 0.15) / 0.12, 0, 1);
+	//hotness = 1;
+	
+	vec3 temp = mix(coldTemp1, hotTemp1, hotness);
+	vec3 temp2 = mix(coldTemp2, hotTemp2, hotness);
+	//vec3 temp = coldTemp1;
+	//vec3 temp2 = coldTemp2;
+	vec3 sunlight = mix(temp, temp2, fract(actualScale));
+	
+	vec3 sunColor = sunlight * min(pow(shadowIntensity, 2.0f), 1.0f) * 1.2f; // midday
+	color = moonColor;
+	if (sunLightStrength > 0.15f) {
+		color = sunColor;
+	} else if (sunLightStrength > 0.05f) {
+		color = mix(moonColor, sunColor, (sunLightStrength - 0.05f) / 0.1f);
+	}
+
+	float fogMult = clamp((0.03 - flatFogDensity) * 50, 0, 1);
+	color *= fogMult;
 	
 	// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJtYXgoMSwxLjc1KigxLTYqYWJzKHgtMC4yMikpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0xIiwiMSIsIjAiLCIyIl19XQ--
-	float dawnMul = max(1, (1-dusk) * 2 * (1 - 6*abs(sunPos3dIn.y - 0.1)));
+	//float dawnMul = max(1, (1-dusk) * 2 * (1 - 6*abs(sunPos3dIn.y - 0.1)));
 	
 	// Intensity is determined by how directly the player is looking at the sun
 	// above intensity 0.8 we get godrays where they shouldn't be o.o
-	intensity = clamp(sunPlrAngle * dawnMul, 0, 0.8); 
+	//intensity = clamp(sunPlrAngle * dawnMul, 0, 0.8);
+	//intensity = 0.8;
 }
\ No newline at end of file
